#!/usr/bin/env perl

use v5.10;
use strict;
use Encode;
use String::ShellQuote;

my $filename = $ARGV[0];
chomp(my $stdin = qx(readlink -f /dev/stdin));
if (@ARGV > 1) { # this is for mac, where it can't readlink the /dev/stdin
    $stdin = $ARGV[1];
} elsif ( $stdin eq "/dev/fd/0" ) {
    system("bhj-notify imenu-ctags 'Not running on Linux? Try to use ~/system-config/bin/Darwin/imenu-ctags'");
    die "Can't find out the stdin file's name";
}

@ARGV = ();

my $point = 1;
my %line_point_map;
my $line = 0;

my $quoted_filename = shell_quote($filename);
chomp(my $mode = qx(lang_for_file $quoted_filename));

my $debug;
my $logfile = $0;
$logfile =~ s!.*/!!;
if ($ENV{DEBUG} eq 'true') {
    $debug = *STDERR;
} else {
    open($debug, ">", glob("~/.cache/system-config/logs/$logfile.log"))
        or die "Can not open debug log file ~/.cache/system-config/logs/$logfile.log";
}

sub debug(@) {
    print $debug "@_\n";
}

debug "working with $filename (mode: $mode, major-mode: $ENV{MAJOR_MODE})";
my $lc_mode = lc $mode;

if ( $lc_mode eq "man" ) {
  system("imenu-man $stdin > ~/.imenu-ctags.$$");
} elsif (-x "$ENV{HOME}/system-config/etc/imenu/$lc_mode") {
  system("$ENV{HOME}/system-config/etc/imenu/$lc_mode $stdin > ~/.imenu-ctags.$$");
} else {
  my %mode_map =
    (
     cperl => "perl",
     python3 => "python",
    );

    $mode = $mode_map{$mode} if $mode_map{$mode};
    system("ctags-ajoke --c-kinds=+p --language-force=$mode -xu --extra=+q $stdin > ~/.imenu-ctags.$$");
    # system("ctags-ajoke --c-kinds=+p --language-force=$mode -xu --extra=+q $stdin 2>&1|tee ~/.imenu-ctags.$$ ~/.imenu-ctagsx");
}


while (<>) { # that's true, the stdin can be read again, because it is
             # a normal file from emacs
    $line_point_map{++$line} = $point;
    my $u_ = decode_utf8($_);
    $point += length($u_);
}

my $total_lines = $line;

wait;

open(my $ctags_out, "<", glob("~/.imenu-ctags.$$"))
    or die "Can not open ctags output";

my %imenu_line_map; # for handling the qualified names from ctags
my %imenu_line_def_map;
my %class_map;
while (<$ctags_out>) {

    # java.util        package      18 Properties.java  package java.util;
    chomp;
    m/(.*?)\s+(\S+)\s+(\d+)\s+(\S+)\s+(.+)/ or next;
    my ($def_name, $def_type, $line, $path, $str) = ($1, $2, $3, $4, $5);
    $imenu_line_def_map{$line} = $def_name;
    ($class_map{$line} = $def_name) =~ s/(.*)\..*/$1/;
    $def_name = "$def_name - $def_type";
    $imenu_line_map{$line} = "$line_point_map{$line} : $def_name : $str\n";
}



foreach my $line (
    sort
    {
        if ($mode eq "OrgMode") {
            $imenu_line_map{$a} <=> $imenu_line_map{$b}
        } else {
            ($class_map{$a} cmp $class_map{$b}) or
                ($imenu_line_def_map{$a} <=> $imenu_line_def_map{$b})
        }
    } keys %imenu_line_map) {
    print $imenu_line_map{$line}
}

unlink glob("~/.imenu-ctags.$$");
